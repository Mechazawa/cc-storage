# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Transpile and make image

on: push

jobs:
  transpile:
    name: Transpile and bundle
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    - run: npm ci
    - run: npm run build
      if: ${{ github.ref == 'refs/heads/master' }}
    - run: npm run build-prod
      if: ${{ github.ref != 'refs/heads/master' }}
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: bundle
        path: dist

  docker:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: transpile

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@master
        with:
          name: bundle
          path: dist
      - run: ls dist
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/Mechazawa/cc-storage
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}